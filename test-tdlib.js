// –°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ä–∞–±–æ—Ç—ã TDLib
require('dotenv').config();
const { TelegramClient } = require('./config/telegram');

// –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
console.log('–ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è:');
console.log('TELEGRAM_API_ID:', process.env.TELEGRAM_API_ID, '—Ç–∏–ø:', typeof process.env.TELEGRAM_API_ID);
console.log('TELEGRAM_API_HASH:', process.env.TELEGRAM_API_HASH ? '—É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω' : '–Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');

async function testTDLib() {
  console.log('–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ TDLib...');
  
  try {
    // –°–æ–∑–¥–∞–µ–º –∫–ª–∏–µ–Ω—Ç —Å —Ç–µ—Å—Ç–æ–≤—ã–º ID —Å–µ—Å—Å–∏–∏
    const client = new TelegramClient('test-session');
    console.log('–ö–ª–∏–µ–Ω—Ç TDLib —Å–æ–∑–¥–∞–Ω —É—Å–ø–µ—à–Ω–æ!');
    
    // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å–æ–µ–¥–∏–Ω–µ–Ω–∏–µ
    await client.connect();
    console.log('–°–æ–µ–¥–∏–Ω–µ–Ω–∏–µ —Å TDLib —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ!');
    
    // –ñ–¥–µ–º –Ω–µ–∫–æ—Ç–æ—Ä–æ–µ –≤—Ä–µ–º—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –≤—Å–µ—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π
    await new Promise(resolve => setTimeout(resolve, 3000));
    
    // –ü–æ–ª—É—á–∞–µ–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏
    const authState = await client.getAuthState();
    console.log('–¢–µ–∫—É—â–µ–µ —Å–æ—Å—Ç–æ—è–Ω–∏–µ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏:', authState._);
    
    // –ó–∞–∫—Ä—ã–≤–∞–µ–º –∫–ª–∏–µ–Ω—Ç
    await client.close();
    console.log('–¢–µ—Å—Ç –∑–∞–≤–µ—Ä—à–µ–Ω —É—Å–ø–µ—à–Ω–æ!');
    
    return true;
  } catch (error) {
    console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ TDLib:', error);
    return false;
  }
}

// –ó–∞–ø—É—Å–∫–∞–µ–º —Ç–µ—Å—Ç
testTDLib()
  .then(success => {
    if (success) {
      console.log('üü¢ TDLib —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ');
      process.exit(0);
    } else {
      console.log('üî¥ –í–æ–∑–Ω–∏–∫–ª–∏ –ø—Ä–æ–±–ª–µ–º—ã –ø—Ä–∏ —Ä–∞–±–æ—Ç–µ —Å TDLib');
      process.exit(1);
    }
  })
  .catch(err => {
    console.error('–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', err);
    process.exit(1);
  }); 