// –û–±—â–∏–µ —Ñ—É–Ω–∫—Ü–∏–∏ –¥–ª—è –≤—Å–µ–≥–æ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è

document.addEventListener('DOMContentLoaded', function() {
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –ø–æ—è–≤–ª–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  function fadeIn(element, duration = 300) {
    element.style.opacity = 0;
    element.style.display = 'block';
    
    let start = null;
    
    function animate(timestamp) {
      if (!start) start = timestamp;
      const progress = timestamp - start;
      const opacity = Math.min(progress / duration, 1);
      
      element.style.opacity = opacity;
      
      if (progress < duration) {
        window.requestAnimationFrame(animate);
      }
    }
    
    window.requestAnimationFrame(animate);
  }
  
  // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–ª–∞–≤–Ω–æ–≥–æ –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è —ç–ª–µ–º–µ–Ω—Ç–æ–≤
  function fadeOut(element, duration = 300) {
    element.style.opacity = 1;
    
    let start = null;
    
    function animate(timestamp) {
      if (!start) start = timestamp;
      const progress = timestamp - start;
      const opacity = Math.max(1 - (progress / duration), 0);
      
      element.style.opacity = opacity;
      
      if (progress < duration) {
        window.requestAnimationFrame(animate);
      } else {
        element.style.display = 'none';
      }
    }
    
    window.requestAnimationFrame(animate);
  }
  
  // –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É—Ç–∏–ª–∏—Ç—ã –≤ –≥–ª–æ–±–∞–ª—å–Ω—ã–π –æ–±—ä–µ–∫—Ç
  window.utils = {
    fadeIn,
    fadeOut
  };
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –≤—Å–ø–ª—ã–≤–∞—é—â–∏–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏
  const tooltips = document.querySelectorAll('[data-tooltip]');
  
  tooltips.forEach(tooltip => {
    const tooltipEl = document.createElement('div');
    tooltipEl.className = 'tooltip opacity-0 absolute bg-gray-800 text-white text-sm rounded py-1 px-2 -mt-12 transition-opacity duration-200';
    tooltipEl.textContent = tooltip.getAttribute('data-tooltip');
    tooltipEl.style.display = 'none';
    tooltip.appendChild(tooltipEl);
    
    tooltip.addEventListener('mouseenter', () => fadeIn(tooltipEl, 200));
    tooltip.addEventListener('mouseleave', () => fadeOut(tooltipEl, 200));
  });
  
  // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä—É–ª–µ—Ç–∫–∏
  initializeRoulette();
});

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Ä—É–ª–µ—Ç–∫–∏
function initializeRoulette() {
  const spinButton = document.getElementById('spin-button');
  if (!spinButton) return; // –ö–Ω–æ–ø–∫–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω
  
  spinButton.addEventListener('click', function() {
    // –û—Ç–∫–ª—é—á–∞–µ–º –∫–Ω–æ–ø–∫—É –Ω–∞ –≤—Ä–µ–º—è –≤—Ä–∞—â–µ–Ω–∏—è
    spinButton.disabled = true;
    spinButton.classList.add('opacity-50', 'cursor-not-allowed');
    spinButton.textContent = '–ö—Ä—É—Ç–∏–º —Ä—É–ª–µ—Ç–∫—É...';
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é –≤—Ä–∞—â–µ–Ω–∏—è —Ä—É–ª–µ—Ç–∫–∏
    const gifts = document.querySelectorAll('.gift');
    gifts.forEach(gift => {
      gift.style.animationDuration = '0.2s';
      gift.style.animationIterationCount = 'infinite';
    });
    
    // –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ —Å–µ—Ä–≤–µ—Ä
    fetch('/api/spin', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      }
    })
    .then(response => response.json())
    .then(data => {
      // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∞–Ω–∏–º–∞—Ü–∏—é
      setTimeout(() => {
        gifts.forEach(gift => {
          gift.style.animationIterationCount = '1';
        });
        
        // –û—Ç–æ–±—Ä–∞–∂–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if (data.success) {
          showModal('–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º!', data.message);
        } else {
          showModal('–£–ø—Å!', data.message || '–ß—Ç–æ-—Ç–æ –ø–æ—à–ª–æ –Ω–µ —Ç–∞–∫');
        }
        
        // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
        spinButton.disabled = false;
        spinButton.classList.remove('opacity-50', 'cursor-not-allowed');
        spinButton.innerHTML = '<span class="mr-2">üéÅ</span> –ö—Ä—É—Ç–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ';
      }, 3000);
    })
    .catch(error => {
      console.error('–û—à–∏–±–∫–∞:', error);
      showModal('–û—à–∏–±–∫–∞', '–ù–µ —É–¥–∞–ª–æ—Å—å —Å–≤—è–∑–∞—Ç—å—Å—è —Å —Å–µ—Ä–≤–µ—Ä–æ–º');
      
      // –í–æ—Å—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∫–Ω–æ–ø–∫—É
      spinButton.disabled = false;
      spinButton.classList.remove('opacity-50', 'cursor-not-allowed');
      spinButton.innerHTML = '<span class="mr-2">üéÅ</span> –ö—Ä—É—Ç–∏—Ç—å –±–µ—Å–ø–ª–∞—Ç–Ω–æ';
    });
  });
}

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞
function showModal(title, message) {
  // –°–æ–∑–¥–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ, –µ—Å–ª–∏ –µ–≥–æ –µ—â–µ –Ω–µ—Ç
  let modal = document.getElementById('result-modal');
  if (!modal) {
    modal = document.createElement('div');
    modal.id = 'result-modal';
    modal.className = 'fixed inset-0 flex items-center justify-center z-50 bg-black bg-opacity-50';
    modal.style.display = 'none';
    
    const modalContent = document.createElement('div');
    modalContent.className = 'bg-white rounded-lg p-8 max-w-md w-full shadow-xl transform transition-all';
    
    const modalTitle = document.createElement('h3');
    modalTitle.id = 'modal-title';
    modalTitle.className = 'text-xl font-bold text-gray-900 mb-4';
    
    const modalMessage = document.createElement('p');
    modalMessage.id = 'modal-message';
    modalMessage.className = 'text-gray-700 mb-6';
    
    const modalButton = document.createElement('button');
    modalButton.className = 'bg-telegram-blue hover:bg-blue-700 text-white font-bold py-2 px-4 rounded focus:outline-none';
    modalButton.textContent = '–ó–∞–∫—Ä—ã—Ç—å';
    modalButton.onclick = () => fadeOut(modal);
    
    modalContent.appendChild(modalTitle);
    modalContent.appendChild(modalMessage);
    modalContent.appendChild(modalButton);
    modal.appendChild(modalContent);
    document.body.appendChild(modal);
  }
  
  // –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–∞–µ–º –º–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ
  document.getElementById('modal-title').textContent = title;
  document.getElementById('modal-message').textContent = message;
  fadeIn(modal);
} 